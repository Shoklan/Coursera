axisTicks = c(.220, 1.060, 7.482)
axisLabels = c("Thu", "Fri", "Sat")
axis(1, tick = axisTicks, labels = axisLabels)
axis(1, at = axisTicks, labels = axisLabels)
plot2 <- plot(globalActive, type="l")
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
plot2 <- plot(globalActive, type="l")
axisTicks = c(.220, 1.060, 7.482)
axisLabels = c("Thu", "Fri", "Sat")
plot2 + axis(1, at = axisTicks, labels = axisLabels)
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
png(file = "plot2.png")
axisTicks = c(.220, 1.060, 7.482)
axisLabels = c("Thu", "Fri", "Sat")
plot2 + axis(1, at = axisTicks, labels = axisLabels)
dev.off()
dev.off()
lowerBound <- match(TRUE, initData$Date == lowerBoundString)
upperBound <- match(TRUE, initData$Date == upperBoundString) -1
data <- initData[lowerBound:upperBound,]
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
png(file = "plot2.png")
plot2 <- plot(globalActive, type="l")
axisTicks = c(.220, 1.060, 7.482)
axisLabels = c("Thu", "Fri", "Sat")
plot2 + axis(1, at = axisTicks, labels = axisLabels)
dev.off()
plot()
?plot
?par
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
# Get indexes to convert data
# midIndex <- match("2/2/2007", data$Date)
# Get total rows
# dataLength = length(data[,1])
# Plotting phase!
png(file = "plot2.png")
plot2 <- plot(globalActive, type="l", xlabs = "")
axisTicks = c(.220, 1.060, 7.482)
axisLabels = c("Thu", "Fri", "Sat")
plot2 + axis(1, at = axisTicks, labels = axisLabels)
# CLOSE OR LOSE YOUR DATA
dev.off()
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
# Get indexes to convert data
# Get total rows
# midIndex <- match("2/2/2007", data$Date)
# dataLength = length(data[,1])
# Plotting phase!
png(file = "plot2.png")
plot2 <- plot(globalActive, type="l", xaxt="n")
axisTicks = c(.220, 1.060, 7.482)
axisLabels = c("Thu", "Fri", "Sat")
plot2 + axis(1, at = axisTicks, labels = axisLabels)
# CLOSE OR LOSE YOUR DATA
dev.off()
axisTicks
is.vector(axisTicks)
is.vector(axisLabels)
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
# Get indexes to convert data
# Get total rows
# midIndex <- match("2/2/2007", data$Date)
# dataLength = length(data[,1])
# Plotting phase!
png(file = "plot2.png")
plot2 <- plot(globalActive, type="l", xaxt="n")
axisTicks = c(.220, 1.060, 7.482)
plot2 + axis(1, at = axisTicks) # labels = axisLabels
# CLOSE OR LOSE YOUR DATA
dev.off()
summary(globalActive)
?axis
plot(globalActive, type="l", xaxt="n")
axisTicks = c(.220, 1.060, 7.482)
plot2 + axis(1, at = axisTicks) # labels = axisLabels
plot2 + axis(1, at = 1.060)
plot2 + axis(1, at = 1.060, las = 2)
plot(globalActive, type="l", xaxt="n")
axisTicks = c(.220, 1.060, 7.482)
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
axisLabels = c( "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
axisTicks = c(.220, 1.060, 7.482)
plot(globalActive, type="l", xaxt="n")
axisTicks = c(.220, 1.060, 7.482)
axisLabels = c( "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
plot(globalActive, type="l", xaxt="n")
axisTicks = c(1.060, 7.482)
axisLabels = c( "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
axisTicks = c(100)
plot(globalActive, type="l", xaxt="n")
axisTicks = c(100)
axisLabels = c("Sat")
axis(1, at = axisTicks, labels = axisLabels)
plot(globalActive, type="l", xaxt="n")
axisTicks = c(1000)
axisLabels = c("Sat")
axis(1, at = axisTicks, labels = axisLabels)
midIndex <- match("2/2/2007", data$Date)
dataLength = length(data[,1])
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
plot(globalActive, type="l", xaxt="n")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# CLOSE OR LOSE YOUR DATA
dev.off()
lowerBound <- match(TRUE, initData$Date == lowerBoundString)
upperBound <- match(TRUE, initData$Date == upperBoundString) -1
data <- initData[lowerBound:upperBound,]
# format variable I care about
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
# Get indexes to convert data
midIndex <- match("2/2/2007", data$Date)
# Get total rows
dataLength = length(data[,1])
# Plotting phase!
png(file = "plot2.png")
plot(globalActive, type="l", xaxt="n")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# CLOSE OR LOSE YOUR DATA
dev.off()
lowerBound <- match(TRUE, initData$Date == lowerBoundString)
upperBound <- match(TRUE, initData$Date == upperBoundString) -1
data <- initData[lowerBound:upperBound,]
# format variable I care about
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
# Get mid index
midIndex <- match("2/2/2007", data$Date)
# Get total rows
dataLength = length(data[,1])
# Plotting phase!
png(file = "plot2.png")
plot(globalActive, type="l", xaxt="n", xlab="", ylab="Global Active Power (kilowatts)")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# CLOSE OR LOSE YOUR DATA
dev.off()
plot(data$Sub_metering_1, type="l")
plot(data$Sub_metering_1)
plot(data$Sub_metering_1)
plot(data$Sub_metering_1, type="l")
plot(data$Sub_metering_1, data$Sub_metering_2, data$Sub_metering_3)
plot()
plot.new()
?abline
?lines
lines(data$Sub_metering_1)
colnames(data)
summary(data$Sub_meterting_3)
summary(data$Sub_metering_3)
lines(data$Sub_metering_1, dataLength)
lines(data$Sub_metering_1,length(data$Sub_metering_1))
length(data$Sub_metering_1)
length(data[,1])
?points
points(data$Sub_metering_1, type="l")
plot3 <- plot.new()
plot3 + points(data$Sub_metering_1, type="l")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
plot.new()
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
midIndex <- match("2/2/2007", data$Date)
dataLength = length(data[,1])
plot.new()
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
dataLength
?points
points(dataLength, data$Sub_metering_1, type="l")
levels(data$Sub_metering_1)
sum(levels(data$Sub_metering_1))
sum(as.vector(levels(data$Sub_metering_1)))
length((levels(data$Sub_metering_1)))
data$Sub_metering_1
points(dataLength, data$Sub_metering_1, type="l", drop = FALSE)
length(as.numeric(data$Sub_metering_1))
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
points(dataLength, data$Sub_metering_1, type="l")
Sub_metering_1
data$Sub_metering_1
globalActive <- as.numeric(levels(data$data$Sub_metering_1))[data$data$Sub_metering_1]
globalActive <- as.numeric(levels(data$data$Sub_metering_2))[data$data$Sub_metering_2]
globalActive <- as.numeric(levels(data$data$Sub_metering_3))[data$data$Sub_metering_3]
subMeter1 <- as.numeric(levels(data$data$Sub_metering_1))[data$data$Sub_metering_1]
subMeter2 <- as.numeric(levels(data$data$Sub_metering_2))[data$data$Sub_metering_2]
subMeter3 <- as.numeric(levels(data$data$Sub_metering_3))[data$data$Sub_metering_3]
plot.new()
points(dataLength, subMeter1, type="l")
length(subMeter1)
subMeter1 <- as.numeric(levels(data$Sub_metering_1))[data$Sub_metering_1]
subMeter2 <- as.numeric(levels(data$Sub_metering_2))[data$Sub_metering_2]
subMeter3 <- as.numeric(levels(data$Sub_metering_3))[data$Sub_metering_3]
points(dataLength, subMeter1, type="l")
length(subMeter1)
dataLength
subMeter1
class(data$Sub_metering_1)
subMeter1 <- data$Sub_metering_1
subMeter2 <- data$Sub_metering_2
subMeter3 <- data$Sub_metering_3
subMeter1
data$Sub_metering_1
data <- initData[lowerBound:upperBound,]
# Get mid index and total rows
midIndex <- match("2/2/2007", data$Date)
dataLength = length(data[,1])
# Get them out of factors
subMeter1 <- data$Sub_metering_1
subMeter2 <- data$Sub_metering_2
subMeter3 <- data$Sub_metering_3
subMeter1
class(subMeter1)
subMeter1 <- as.numeric(levels(data$Sub_metering_1))[data$Sub_metering_1]
subMeter1
subMeter2 <- as.numeric(levels(data$Sub_metering_2))[data$Sub_metering_2]
subMeter3 <- as.numeric(levels(data$Sub_metering_3))[data$Sub_metering_3]
length(subMeter1)
points(dataLength, subMeter1, type = "l")
plot(dataLength, subMeter1)
length(dataLength)
dataLength
subMeter1
?plot
?plot
plot(c(subMeter1, subMeter2, subMeter3), type="l")
plot(subMeter1)
plot(subMeter1, type="l")
?par
?lines
lines(dataLength, subMeter1, type="l")
lines(dataLength, data$Sub_metering_1, type="l", )
lines(1:dataLength, subMeter1, type="l", )
lines(1:dataLength, subMeter1, type="l")
lines(1:dataLength, subMeter2, type="l")
lines(1:dataLength, subMeter3, type="l")
length(subMeter3)
length(data$Sub_metering_3)
data$Sub_metering_3
subMeter3 <- as.numeric(levels(data$Sub_metering_3))[data$Sub_metering_3]
length(data$Sub_metering_3)
lines(1:dataLength, subMeter3, type="l")
length(subMeter3)
subMeter3 <- as.numeric(levels(data$Sub_metering_3))[data$Sub_metering_3]
length(subMeter3)
subMeter3
data <- initData[lowerBound:upperBound,]
subMeter3 <- as.numeric(levels(data$Sub_metering_3))[data$Sub_metering_3]
subMeter3
subMeter2
data$Sub_metering_3
data$Sub_metering_2
data$Sub_metering_3
subMeter3 <- data$Sub_metering_3
subMeter3
lines(1:dataLength, subMeter3, type="l")
lines(1:dataLength, subMeter3, type="l", col="blue")
plot.new(xaxt="n")
plot.new(xaxt="n")
plot.new()
lines(1:dataLength, subMeter1, type="l")
lines(1:dataLength, subMeter2, type="l", col="red")
lines(1:dataLength, subMeter3, type="l", col="blue")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
?axis
plot(1:dataLength, subMeter1, type="l")
plot(1:dataLength, subMeter1, type="l", xaxt="n")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
lines(1:dataLength, subMeter2, type="l", col="red")
lines(1:dataLength, subMeter3, type="l", col="blue")
?legend
legend(40, dataLength)
legend(40, dataLength, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = ("black", "red", "blue:"))
legend(40, dataLength, c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = ("black", "red", "blue"))
varNames <- c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
colorNames       <- c("black", "red", "blue")
legend(40, dataLength, varNames, col = colorNames)
legend(1, 1, varNames, col = colorNames)
legend("topright", varNames, col = colorNames)
legend("topright", varNames, fill = terrain.colors(3), hriz=FALSE)
legend("topright", varNames, fill = terrain.colors(3), horiz=FALSE)
legend("topright", varNames, fill = terrain.colors(1), horiz=FALSE)
legend("topright", varNames, fill = terrain.colors(2), horiz=FALSE)
legend("topright", varNames, fill = terrain.colors(3), horiz=FALSE)
legend("topright", varNames, fill = varNames, horiz=FALSE)
legend("topright", varNames, fill = colorNames, horiz=FALSE)
legend("topright", varNames, line = colorNames, horiz=FALSE)
legend("topright", varNames, line.col = colorNames, horiz=FALSE)
legend("topright", varNames, box.col = colorNames, horiz=FALSE)
legend("topright", varNames, col = colorNames, horiz=FALSE)
plot(1:dataLength, subMeter1, type="l", xaxt="n", xlab="", ylab="Energy sub metering")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
lines(1:dataLength, subMeter2, type="l", col="red")
lines(1:dataLength, subMeter3, type="l", col="blue")
legend("topright", varNames, col = colorNames, horiz=TRUE)
legend("topright", varNames, col = colorNames, horiz=FALSE)
legend("topright", pch = 1,  varNames, col = colorNames, horiz=FALSE)
legend("topright", pch = 2,  varNames, col = colorNames, horiz=FALSE)
?pch
legend("topright", pch = 3,  varNames, col = colorNames, horiz=FALSE)
legend("topright", pch = 4,  varNames, col = colorNames, horiz=FALSE)
legend("topright", pch = 5,  varNames, col = colorNames, horiz=FALSE)
legend("topright", pch = 6,  varNames, col = colorNames, horiz=FALSE)
legend("topright", pch = 7,  varNames, col = colorNames, horiz=FALSE)
legend("topright", pch = "-",  varNames, col = colorNames, horiz=FALSE)
plot(1:dataLength, subMeter1, type="l", xaxt="n", xlab="", ylab="Energy sub metering")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
lines(1:dataLength, subMeter2, type="l", col="red")
lines(1:dataLength, subMeter3, type="l", col="blue")
legend("topright", pch = "-",  varNames, col = colorNames, horiz=FALSE)
legend("topright", pch = "---",  varNames, col = colorNames, horiz=FALSE)
?legend
legend("topright", lty = 2,  varNames, col = colorNames, horiz=FALSE)
legend("topright", lty = 1,  varNames, col = colorNames, horiz=FALSE)
sum(1:4)
1*.1 + 2*.2 + 3*.3 + 4*.4
is.numeric(data$Voltage)
data$Voltage[1]
voltage <- as.numeric(levels(data$Voltage))[data$Voltage]
data <- initData[lowerBound:upperBound,]
# Get mid index and total rows
midIndex <- match("2/2/2007", data$Date)
dataLength = length(data[,1])
# Get them out of factors
subMeter1 <- as.numeric(levels(data$Sub_metering_1))[data$Sub_metering_1]
subMeter2 <- as.numeric(levels(data$Sub_metering_2))[data$Sub_metering_2]
subMeter3 <- data$Sub_metering_3
# Print to png
png(file = "plot3.png")
# Beginning plotting process!
plot(1:dataLength, subMeter1, type="l", xaxt="n", xlab="", ylab="Energy sub metering")
# Set up graph axis
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
# draw the remaining two lines of data
axis(1, at = axisTicks, labels = axisLabels)
lines(1:dataLength, subMeter2, type="l", col="red")
lines(1:dataLength, subMeter3, type="l", col="blue")
# .. and, make the legend.
legend("topright", lty = 1,  varNames, col = colorNames, horiz=FALSE)
# CLOSE OR LOSE YOUR DATA
dev.off()
dev.off()
lowerBound <- match(TRUE, initData$Date == lowerBoundString)
upperBound <- match(TRUE, initData$Date == upperBoundString) -1
data <- initData[lowerBound:upperBound,]
# Get mid index and total rows
midIndex <- match("2/2/2007", data$Date)
dataLength = length(data[,1])
# Get them out of factors
subMeter1 <- as.numeric(levels(data$Sub_metering_1))[data$Sub_metering_1]
subMeter2 <- as.numeric(levels(data$Sub_metering_2))[data$Sub_metering_2]
subMeter3 <- data$Sub_metering_3
# Print to png
png(file = "plot3.png")
# Beginning plotting process!
plot(1:dataLength, subMeter1, type="l", xaxt="n", xlab="", ylab="Energy sub metering")
# Set up graph axis
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# draw the remaining two lines of data
lines(1:dataLength, subMeter2, type="l", col="red")
lines(1:dataLength, subMeter3, type="l", col="blue")
# .. and, make the legend.
legend("topright", lty = 1,  varNames, col = colorNames, horiz=FALSE)
# CLOSE OR LOSE YOUR DATA
dev.off()
plot(voltage, type="l", xlabs = "datetime", ylabs="Voltage" xatx="n")
plot(voltage, type="l", xlabs = "datetime", ylabs="Voltage", xaxt="n",)
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
subMeter1 <- as.numeric(levels(data$Sub_metering_1))[data$Sub_metering_1]
subMeter2 <- as.numeric(levels(data$Sub_metering_2))[data$Sub_metering_2]
subMeter3 <- data$Sub_metering_3
plot(1:dataLength, subMeter1, type="l", xaxt="n", xlab="", ylab="Energy sub metering")
# Set up graph axis
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# draw the remaining two lines of data
lines(1:dataLength, subMeter2, type="l", col="red")
lines(1:dataLength, subMeter3, type="l", col="blue")
# .. and, make the legend.
legend("topright", lty = 1,  varNames, col = colorNames, horiz=FALSE)
is.numeric(data$Global_reactive_power)
globalReactive <- as.numeric(levels(data$Global_reactive_power))[data$Global_reactive_power]
plot(globalReactive, type="l", xaxt="n", xlabs="datetime")
plot(globalReactive, type="l", xaxt="n", xlab="datetime". )
plot(globalReactive, type="l", xaxt="n", xlab="datetime")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
plot(globalReactive, type="l", xaxt="n", xlab="datetime", ylab="Global_reactive_power")
# Set up graph axis
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
par(mfrow = c(1,2))
plot(globalActive, type="l", xaxt="n", xlab="", ylab="Global Active Power (kilowatts)")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# Plot Graph 2 of Part 4
plot(voltage, type="l", xlab = "datetime", ylab="Voltage", xaxt="n",)
par(mfrow = c(2,2))
#Plot Graph Part 2 Again
plot(globalActive, type="l", xaxt="n", xlab="", ylab="Global Active Power (kilowatts)")
plot.new()
par(mfrow = c(2,2))
plot(globalActive, type="l", xaxt="n", xlab="", ylab="Global Active Power (kilowatts)")
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
voltage <- as.numeric(levels(data$Voltage))[data$Voltage]
subMeter1 <- as.numeric(levels(data$Sub_metering_1))[data$Sub_metering_1]
subMeter2 <- as.numeric(levels(data$Sub_metering_2))[data$Sub_metering_2]
subMeter3 <- data$Sub_metering_3
globalReactive <- as.numeric(levels(data$Global_reactive_power))[data$Global_reactive_power]
midIndex <- match("2/2/2007", data$Date)
dataLength = length(data[,1])
par(mfrow = c(2,2))
plot(globalActive, type="l", xaxt="n", xlab="", ylab="Global Active Power (kilowatts)")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# Plot Graph 2 of Part 4
plot(voltage, type="l", xlab = "datetime", ylab="Voltage", xaxt="n",)
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# Plot Graph 3 of Part 4
plot(1:dataLength, subMeter1, type="l", xaxt="n", xlab="", ylab="Energy sub metering")
# Set up graph axis
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# draw the remaining two lines of data
lines(1:dataLength, subMeter2, type="l", col="red")
lines(1:dataLength, subMeter3, type="l", col="blue")
# .. and, make the legend.
legend("topright", lty = 1,  varNames, col = colorNames, horiz=FALSE)
# Plot Graph 4 of Part 4
plot(globalReactive, type="l", xaxt="n", xlab="datetime", ylab="Global_reactive_power")
# Set up graph axis
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
globalActive <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
subMeter1 <- as.numeric(levels(data$Sub_metering_1))[data$Sub_metering_1]
voltage <- as.numeric(levels(data$Voltage))[data$Voltage]
subMeter2 <- as.numeric(levels(data$Sub_metering_2))[data$Sub_metering_2]
subMeter3 <- data$Sub_metering_3
globalReactive <- as.numeric(levels(data$Global_reactive_power))[data$Global_reactive_power]
# Get mid index and total rows
midIndex <- match("2/2/2007", data$Date)
dataLength = length(data[,1])
png(file = "plot4.png")
# Set up columns for printing.
par(mfrow = c(2,2))
#Plot Graph Part 2 Again
plot(globalActive, type="l", xaxt="n", xlab="", ylab="Global Active Power (kilowatts)")
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# Plot Graph 2 of Part 4
plot(voltage, type="l", xlab = "datetime", ylab="Voltage", xaxt="n",)
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# Plot Graph 3 of Part 4
plot(1:dataLength, subMeter1, type="l", xaxt="n", xlab="", ylab="Energy sub metering")
# Set up graph axis
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# draw the remaining two lines of data
lines(1:dataLength, subMeter2, type="l", col="red")
lines(1:dataLength, subMeter3, type="l", col="blue")
# .. and, make the legend.
legend("topright", lty = 1,  varNames, col = colorNames, horiz=FALSE)
# Plot Graph 4 of Part 4
plot(globalReactive, type="l", xaxt="n", xlab="datetime", ylab="Global_reactive_power")
# Set up graph axis
axisTicks = c(0, midIndex, dataLength )
axisLabels = c("Thu", "Fri", "Sat")
axis(1, at = axisTicks, labels = axisLabels)
# CLOSE OR LOSE YOUR DATA
dev.off()
dev.off()
