?mtcars
attach(mtcars)
library(lattice)
with(mtcars, xyplot(wt-mpg, group-cyl, auto.key=T, pch=20, cex=3))
?sovle
?solve
objects()
ls()
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
assign("y", c(10.4, 5.6, 3.1, 6.4, 21.7))
c(10.4, 5.6, 3.1, 6.4, 21.7) -> z
1/x
v <- c(x, 0,x)
sqrt(-17+0i)
seq(-5, 5, by=.2) -> s3
is.na(x)
0/0
z <- c(:3, NA); ind <- is.na(z)
z <- c(1:3, NA); ind <- is.na(z)
ind <- is.na(z)
z <- c(1:3, NA); ind <- is.na(z)
?quotes
?Quotes
labs <- paste(c("X", "Y"), 1:10, sep="")
y <-x[!is.na(x)]
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
assign("y", c(10.4, 5.6, 3.1, 6.4, 21.7))
c(10.4, 5.6, 3.1, 6.4, 21.7) -> z
y <-x[!is.na(x)]
temp <-[1:10]
temp <- c(1:10)
temp[5]
c("x", "y")[rep(c(1,2,2,1), times=4)]
fruit <- c(5,10,1,20)
names(fruit) <- c("orange", "banana", "apple", "peach")
mode(fruit)
mode(ind)
mode(temp)     # numeric
"sa", "act", "nsw", "vic", "vic", "act")
assign("lamps", rep(c(12:15), times = 8), c(9:15))
assign("lamps", rep(c(12:15), times = 8))
lampF <- factor(lamps)
levels(lamps)
levels(lampF)
var(lamps)
sqrt(var(lamps))
x <- array(1:20, dim=c(4,5))
x
i <- array(1:20, dim=c(4,5))
i
i <- array(c(1:3,3:1), dim=c(3,2))
i
x[i]
x[i] <- 0
x
as.Date("1970-01-01")
x <- as.Date("1970-01-01")
x
unclass(x)
sys.time()
Sys.time()
p <- as.POSIXlt(x)
names(unclass(p))
p$sec
x <- rnorm(100)
sd(x)
Z <- array(o, c(3,4,2))
Z <- array(0, c(3,4,2))
vector <- as.vector(x)
?statef
?cut
factor(cut(incomes, breaks = 35+10*(0:7))) -> incomef
Lst <- list(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9))
levels(Lst)
Lst[[1]]
Lst[[2]]
Lst[[4]]
Lst[[4]][1]
Lst[1]
Lst[2]
Lst[4]
x <- list(a = 1:5, b= rnorm(10))
lapply(x, mean)
x <- matrix(rnorm(200), 20, 10)
x
apply(x, 1, quantile, probs = c(.25, .75))
?list.files
x <- data.frame(name="Date", name="sulfate", name="nitrate")
x
name(x)
names(x)
x <- data.frame(Date, sulfate", nitrate)
")"
x <- data.frame(Date, sulfate, nitrate)
x <- data.frame("Date", "sulfate", "nitrate")
x
?data.frame
x <- data.frame(row.names= c("Date", "sulfate", "nitrate")
)
x
names(x)
names(x)
x
x[]
x[,1]
x
x.rownames
row.names(x)
x[NA, NA, NA]
NA
data = c(NA, NA, NA)
data
x <- rbind(x, data)
x
names(x)
?rbind
data = c(NA, NA, NA)
x
x <- data.frame(row.names = c("Date", "nitrate", "sulfate"))
x
x
data
x <- rbind(data, x)
x
?list
list(NA, NA, NA)
x <- list(NA, NA, NA)
x
x <- (x, c(2015, 11, 19))
x <- rbind(x, c(2015, 11, 19))
x
data.frame(row.names = c("Date", "nitrate", "sulfate"))
data.frame(row.names = c("Date", "nitrate", "sulfate"), x)
data.frame(x, row.names = c("Date", "nitrate", "sulfate"))
df <- data.frame(Date=character(i), nitrate=numeric(i), sulfate(i))
df <- data.frame(Date=NA, nitrate=NA, sulfate=NA)
df
if(df["Date"] = NA & df["nitrate"] = NA & df["sulfate"] = NA){ print("Bingo")}
if(df["Date"] == NA & df["nitrate"] == NA & df["sulfate"] == NA){ print("Bingo")}
if(df["Date"] == NA && df["nitrate"] == NA && df["sulfate"] == NA){ print("Bingo") }
if(df["Date"] == NA && df["nitrate"] == NA){ print("Bingo") }
if(df["Date"] == NA{ print("Bingo") }
if(df["Date"] == NA){ print("Bingo") }
df["Date"]
if(df$Date == NA){ print("Bingo") }
if(is.na(df$Date) == TRUE){ print("Bingo") }
if(is.na(df$Date) == TRUE & is.na(df$sulfate) == TRUE & is.na(df$nitrate) == TRUE){ print("Bingo") }
if(is.na(df$Date[1]) == TRUE & is.na(df$sulfate) == TRUE & is.na(df$nitrate) == TRUE){ print("Bingo") }
if(is.na(df$Date[1]) == TRUE & is.na(df$sulfate[1]) == TRUE & is.na(df$nitrate[1]) == TRUE){ print("Bingo") }
df
df <- rbind(df, data.frame(1,1,1))
df <- rbind(df, data.frame(row.names = c("Date", "nitrate", "sulfate") , 1,1,1))
df <- rbind(df, data.frame(Date=1,sulfate=1,nitrate=1))
df
if(is.na(df$Date[1]) == TRUE & is.na(df$sulfate[1]) == TRUE & is.na(df$nitrate[1]) == TRUE){ print("Bingo") }
if(is.na(df$Date[2]) == TRUE & is.na(df$sulfate[2]) == TRUE & is.na(df$nitrate[2]) == TRUE){ print("Bingo") }
?length()
length(df)
df
df[]
df[0]
list(row.names(c("Data", "nitrate", "sulfate")))
list
names(list)
x <- list(row.names(c("Data", "nitrate", "sulfate")))
x
names(x)
x[1,]
lst <- list(Date=NA, nitrate=NA, sulfate=NA)
lst
lst[1,]
lst[1]
lst$Date
?subset
mylist <- list(1:5, 6:10, 11:15)
sapply(mylist, "[", c(2,3))
mylist
f <- function(i){}
x
x <- list(Date=NA, nitrate=NA, sulfate=NA)
x
x <- list(Date=c(NA, 1, 3), nitrate=(NA, 1, NA), sulfate=c(NA, 1, 1))
x <- list(Date=c(NA, 1, 3), nitrate=(NA, 1, NA), sulfat=c(NA, 1, 1))
x <- list(Date=c(NA, 1, 3), nitrate=c(NA, 1, NA), sulfat=c(NA, 1, 1))
x
for(i in 1:3){
if(is.na(x$Date[,i]) == FALSE & is.na(x$nitrate[,i]) == FALSE & is.na(x$sulfate[,i]) == FALSE){ print("CONFIRM")}
}
for(i in 1:3){
if(is.na(x$Date[i]) == FALSE & is.na(x$nitrate[i]) == FALSE & is.na(x$sulfate[i]) == FALSE){ print("CONFIRM")}
}
is.na(x)
x
x$Date
x$Date[1]
x$Date[2]
x$Date[3]
for(i in 1:3){
if(is.na(x$Date[i]) == FALSE & is.na(x$nitrate[i]) == FALSE & is.na(x$sulfat[i]) == FALSE){ print("CONFIRM")}
}
f <- function(i){
if(is.na(x$Date[i]) == FALSE & is.na(x$nitrate[i]) == FALSE & is.na(x$sulfat[i]) == FALSE){ print("CONFIRM")}
}
f
f(1)
f(2)
f(3)
lapply(x, f, i=1:3)
lapply(x, f, 1:3)
lapply(x, f, i=1:3)
lapply(x, f, i=c(1:3)
)
f <- function(){
if(is.na(x$Date[i]) == FALSE & is.na(x$nitrate[i]) == FALSE & is.na(x$sulfat[i]) == FALSE){ print("CONFIRM")}
}
lapply(x, f, i=c(1:3)
)
list1 <- 1:10
list2 <- letters[1:26]
list3 <- 25:32
mylist <- list(list1, list2, list3)
foo<- function(x){x[c(3,5,9)]}
mylist[[1]]
mylist[1]
m <- matrix(1:6, 5, 4)
m <- matrix(1:20, 5, 4)
m
matrixDislikesEvens <- function(x){if(x % 2 == 0) 0}
matrixDislikesEvens <- function(x){if(x % 2 == 0)
0}
matrixDislikesEvens <- function(x){
if(x % 2 == 0)
0
}
matrixDislikesEvens <- function(x){
if(x % 2 == 0)
0
}
matrixDislikesEvens <- function(x){
if(x % 2 == 0)
matrixDislikesEvens <- function(x){
if(x %% 2 == 0)
0
}
mapply(m, matrixDislikesEvens)
mapply(m, matrixDislikesEvens())
mapply(m[,1], matrixDislikesEvens())
m[,1]
?mapply
mapply(matrixDislikesEvens, m)
mapply(matrixDislikesEvens, m[,1])
mapply(1:4, 4:1)
mapply(rep, 1:4, 4:1)
mapply(matrixDislikesEvens, m[,1], length(m[,1]))
mapply(matrixDislikesEvens, m[,1], length(m)
)
mapply(matrixDislikesEvens, m[,1], 1:4
)
mapply(mean, m)
?sqrt
?pow
quadraticExp <- expression(-b + (sqrt(B*B -4*a*c)/2)
)
quadraticExpP <- expression(-b + (sqrt(B*B -4*a*c)/2))
quadraticExpM <- expression(-b - (sqrt(B*B -4*a*c)/2))
b <- 10; a <- 5; c <- 2;
eval(quadraticExpP)
quadraticExpP <- expression(-b + (sqrt(b*b -4*a*c)/2))
quadraticExpM <- expression(-b - (sqrt(b*b -4*a*c)/2))
eval(quadraticExpP)
eval(quadraticExpM)
quadtratic <- function(a,b,c){
c(eval(quadraticExpP), eval(quadraticExpM))
}
quadratic <- function(a,b,c){
c(eval(quadraticExpP), eval(quadraticExpM))
}
quadratic(5,5,5)
quadratic(1,5,9)
quadratic(9,1,1)
quadratic(1,9,1)
?rpois
data.entry(m)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd("C:\\Users\\mitcolli\\Documents\\Docs\\code\\Coursera\\RProgramming\\wk4")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- "NY"
is.character(state)
!\is.character(state)
!is.character(state)
colnames(outcomes)
colname(outcome)
`colnames(outcome)
colnames(outcome)
head(outcome["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])
?subset
heartAttack <- subset(outcome, colnames(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), na.rm = T)
heartAttack <- subset(outcome, colnames("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack") == T, na.rm = T)
head(heartAttack)
heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
heartAttack <- subset(outcome, outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack != NA)
head(heartAttack)
outcome[1, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
heartAttack <- subset(outcome, outcome[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"] != NA)
head(heartAttack)
heartAttack[1]
heartAttack[1,]
heartAttack <- outcome(outcome["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"][,1], na.rm = TRUE)
heartAttack <- which(outcome["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"][,1], na.rm = TRUE)
heartAttack <- which(!is.na(outcome["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"][,1]))
head(heartAttack)
heartAttack <- which(!is.na(outcome["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]))
head(heartAttack)
heartAttack
?subset
heartAttack <- subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), select = outcome)
heartAttack <- subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), select = colnames(outcome))
head(heartAttack)
is.na(heartAttack)
heartAttack  <- subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), select = colnames(outcome))
heartFailure <- subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), select = colnames(outcome))
pneumonia    <- subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), select = colnames(outcome))
heartAttack["Na"]
heartAttack[,"Na"]
is.na(heartAttack)
?where
which?
?where
?which
which(heartAttack, is.na(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]))
which(heartAttack, is.na(heartAttack$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
?which
which(heartAttack, is.na(heartAttack$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack) == T)
which(heartAttack, heartAttack$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == NA)
heartAttack$Hospital.Name
heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"] == NA
heartAttack  <- subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), select = colnames(outcome))
is.na(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])
is.na(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]) == TRUE
?select
if(is.na(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]) == TRUE){ print("Found one")}
for(item in heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]){}
for(item in heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]){
if(is.na(item))
print(item)
}
for(item in heartAttack){
if(is.na(item$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
print(item)
}
for(item in heartAttack){
if(is.na(item["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]))
print(item)
}
for(item in heartAttack){
if(is.na(item["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]) == TRUE)
print(item)
}
heartAttack  <- subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), select = colnames(outcome))
heartFailure <- subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), select = colnames(outcome))
pneumonia    <- subset(outcome, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), select = colnames(outcome))
min(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])
min(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"], rm.na = TRUE)
heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
min(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"], rm.na = T)
min(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"][2,] rm.na = T)
min(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"][1,] rm.na = T)
min(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"][,2] rm.na = T)
min(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"][,1] rm.na = T)
min(heartAttack["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"], rm.na = T)
?min
which(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, rm.na = TRUE)
?which
which(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
)
which(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, !is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
which(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack) == FALSE)
attack <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
outcome[attack]
temp <- subset(outcome[attack], is.na(outcome[attack]) == TRUE)
temp
is.na(outcome[attack]) == TRUE
head(is.na(outcome[attack]) == TRUE)
temp <- subset(outcome, !(is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
temp
head(temp)
heartAttack <- subset(outcome, !(is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
heartFailure <- subset(outcome, !(is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)))
pneumonia <- subset(outcome, !(is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)))
min(heartAttack$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
index(min(heartAttack$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
?Position
Position(min(heartAttack$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
for(item in head(heartAttack))
{print item["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]}
for(item in head(heartAttack)){print(item["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])}
head(heartAttack$Hospital.30.Day.Readmission.Rates.from.Heart.Attack)
temp <- head(heartAttack)
temp
temp$Hospital.30.Day.Readmission.Rates.from.Heart.Attack
for(item in temp{print(item["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])}
for(item in temp){print(item["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])}
for(item in temp){print(item)}
temp$Hospital.30.Day.Readmission.Rates.from.Heart.Attack
heartAttack[1,]
heartAttack[1,attack]
heartAttack[2,attack]
count <- 1:length(heartAttack[,1])
attack == "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
hAttack  <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
hFAilure <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
pSick    <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
in
attack is hAttack
attack in hAttack
head(outcome[hAttack])
head(outcome[hAttack], rm.na = T)
?head
is.na(head(outcome[hAttack])) == F
temp <- as.numeric(outcome[,11])
hist(temp)
temp <- which(outcome, outcome$State == "NY")
?which
with
?with
temp <- with(outcome, outcome$State == "NY")
length(temp)
head(temp)
temp <- within(outcome, outcome$State == "NY")
head(temp)
head(temp$State)
temp <- subset(outcome, outcome$State == "NY")
ehad(temp)
head(temp)
head(temp$State)
temp <- subset(outcome, outcome$State == "NY" & !is.na(outcome[hAttack]))
head(temp[hAttack])
temp[1000, hAttack] < temp[2000, hAttack]
temp[2741, hAttack] < temp[2746, hAttack]
temp[2741, hAttack]
temp[1, hAttack]
temp[1, hAttack] < temp[5, hAttack]
temp <- temp[5,]
temp
temp[hAttack]
temp[hAttack] > 100
temp[1,hAttack] > 100
class(temp[1,hAttack] > 100)
class(temp[1,hAttack])
temp[1,hAttack]
temp
temp <- subset(outcome, outcome$State == "NY" & !is.na(outcome[hAttack]))
head(sort(temp))
?sort
head(sort(temp$Hospital.30.Day.Readmission.Rates.from.Heart.Failure))
tail(sort(temp$Hospital.30.Day.Readmission.Rates.from.Heart.Failure))
temp <- subset(outcome, outcome$State == "NY" & !is.na(as.numeric(outcome[hAttack])))
tail(sort(as.numeric(temp$Hospital.30.Day.Readmission.Rates.from.Heart.Failure)))
head(sort(as.numeric(temp$Hospital.30.Day.Readmission.Rates.from.Heart.Failure)))
