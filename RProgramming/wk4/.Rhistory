?mtcars
attach(mtcars)
library(lattice)
with(mtcars, xyplot(wt-mpg, group-cyl, auto.key=T, pch=20, cex=3))
?sovle
?solve
objects()
ls()
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
assign("y", c(10.4, 5.6, 3.1, 6.4, 21.7))
c(10.4, 5.6, 3.1, 6.4, 21.7) -> z
1/x
v <- c(x, 0,x)
sqrt(-17+0i)
seq(-5, 5, by=.2) -> s3
is.na(x)
0/0
z <- c(:3, NA); ind <- is.na(z)
z <- c(1:3, NA); ind <- is.na(z)
ind <- is.na(z)
z <- c(1:3, NA); ind <- is.na(z)
?quotes
?Quotes
labs <- paste(c("X", "Y"), 1:10, sep="")
y <-x[!is.na(x)]
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
assign("y", c(10.4, 5.6, 3.1, 6.4, 21.7))
c(10.4, 5.6, 3.1, 6.4, 21.7) -> z
y <-x[!is.na(x)]
temp <-[1:10]
temp <- c(1:10)
temp[5]
c("x", "y")[rep(c(1,2,2,1), times=4)]
fruit <- c(5,10,1,20)
names(fruit) <- c("orange", "banana", "apple", "peach")
mode(fruit)
mode(ind)
mode(temp)     # numeric
"sa", "act", "nsw", "vic", "vic", "act")
assign("lamps", rep(c(12:15), times = 8), c(9:15))
assign("lamps", rep(c(12:15), times = 8))
lampF <- factor(lamps)
levels(lamps)
levels(lampF)
var(lamps)
sqrt(var(lamps))
x <- array(1:20, dim=c(4,5))
x
i <- array(1:20, dim=c(4,5))
i
i <- array(c(1:3,3:1), dim=c(3,2))
i
x[i]
x[i] <- 0
x
as.Date("1970-01-01")
x <- as.Date("1970-01-01")
x
unclass(x)
sys.time()
Sys.time()
p <- as.POSIXlt(x)
names(unclass(p))
p$sec
x <- rnorm(100)
sd(x)
Z <- array(o, c(3,4,2))
Z <- array(0, c(3,4,2))
vector <- as.vector(x)
?statef
?cut
factor(cut(incomes, breaks = 35+10*(0:7))) -> incomef
Lst <- list(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9))
levels(Lst)
Lst[[1]]
Lst[[2]]
Lst[[4]]
Lst[[4]][1]
Lst[1]
Lst[2]
Lst[4]
x <- list(a = 1:5, b= rnorm(10))
lapply(x, mean)
x <- matrix(rnorm(200), 20, 10)
x
apply(x, 1, quantile, probs = c(.25, .75))
?list.files
x <- data.frame(name="Date", name="sulfate", name="nitrate")
x
name(x)
names(x)
x <- data.frame(Date, sulfate", nitrate)
")"
x <- data.frame(Date, sulfate, nitrate)
x <- data.frame("Date", "sulfate", "nitrate")
x
?data.frame
x <- data.frame(row.names= c("Date", "sulfate", "nitrate")
)
x
names(x)
names(x)
x
x[]
x[,1]
x
x.rownames
row.names(x)
x[NA, NA, NA]
NA
data = c(NA, NA, NA)
data
x <- rbind(x, data)
x
names(x)
?rbind
data = c(NA, NA, NA)
x
x <- data.frame(row.names = c("Date", "nitrate", "sulfate"))
x
x
data
x <- rbind(data, x)
x
?list
list(NA, NA, NA)
x <- list(NA, NA, NA)
x
x <- (x, c(2015, 11, 19))
x <- rbind(x, c(2015, 11, 19))
x
data.frame(row.names = c("Date", "nitrate", "sulfate"))
data.frame(row.names = c("Date", "nitrate", "sulfate"), x)
data.frame(x, row.names = c("Date", "nitrate", "sulfate"))
df <- data.frame(Date=character(i), nitrate=numeric(i), sulfate(i))
df <- data.frame(Date=NA, nitrate=NA, sulfate=NA)
df
if(df["Date"] = NA & df["nitrate"] = NA & df["sulfate"] = NA){ print("Bingo")}
if(df["Date"] == NA & df["nitrate"] == NA & df["sulfate"] == NA){ print("Bingo")}
if(df["Date"] == NA && df["nitrate"] == NA && df["sulfate"] == NA){ print("Bingo") }
if(df["Date"] == NA && df["nitrate"] == NA){ print("Bingo") }
if(df["Date"] == NA{ print("Bingo") }
if(df["Date"] == NA){ print("Bingo") }
df["Date"]
if(df$Date == NA){ print("Bingo") }
if(is.na(df$Date) == TRUE){ print("Bingo") }
if(is.na(df$Date) == TRUE & is.na(df$sulfate) == TRUE & is.na(df$nitrate) == TRUE){ print("Bingo") }
if(is.na(df$Date[1]) == TRUE & is.na(df$sulfate) == TRUE & is.na(df$nitrate) == TRUE){ print("Bingo") }
if(is.na(df$Date[1]) == TRUE & is.na(df$sulfate[1]) == TRUE & is.na(df$nitrate[1]) == TRUE){ print("Bingo") }
df
df <- rbind(df, data.frame(1,1,1))
df <- rbind(df, data.frame(row.names = c("Date", "nitrate", "sulfate") , 1,1,1))
df <- rbind(df, data.frame(Date=1,sulfate=1,nitrate=1))
df
if(is.na(df$Date[1]) == TRUE & is.na(df$sulfate[1]) == TRUE & is.na(df$nitrate[1]) == TRUE){ print("Bingo") }
if(is.na(df$Date[2]) == TRUE & is.na(df$sulfate[2]) == TRUE & is.na(df$nitrate[2]) == TRUE){ print("Bingo") }
?length()
length(df)
df
df[]
df[0]
list(row.names(c("Data", "nitrate", "sulfate")))
list
names(list)
x <- list(row.names(c("Data", "nitrate", "sulfate")))
x
names(x)
x[1,]
lst <- list(Date=NA, nitrate=NA, sulfate=NA)
lst
lst[1,]
lst[1]
lst$Date
?subset
mylist <- list(1:5, 6:10, 11:15)
sapply(mylist, "[", c(2,3))
mylist
f <- function(i){}
x
x <- list(Date=NA, nitrate=NA, sulfate=NA)
x
x <- list(Date=c(NA, 1, 3), nitrate=(NA, 1, NA), sulfate=c(NA, 1, 1))
x <- list(Date=c(NA, 1, 3), nitrate=(NA, 1, NA), sulfat=c(NA, 1, 1))
x <- list(Date=c(NA, 1, 3), nitrate=c(NA, 1, NA), sulfat=c(NA, 1, 1))
x
for(i in 1:3){
if(is.na(x$Date[,i]) == FALSE & is.na(x$nitrate[,i]) == FALSE & is.na(x$sulfate[,i]) == FALSE){ print("CONFIRM")}
}
for(i in 1:3){
if(is.na(x$Date[i]) == FALSE & is.na(x$nitrate[i]) == FALSE & is.na(x$sulfate[i]) == FALSE){ print("CONFIRM")}
}
is.na(x)
x
x$Date
x$Date[1]
x$Date[2]
x$Date[3]
for(i in 1:3){
if(is.na(x$Date[i]) == FALSE & is.na(x$nitrate[i]) == FALSE & is.na(x$sulfat[i]) == FALSE){ print("CONFIRM")}
}
f <- function(i){
if(is.na(x$Date[i]) == FALSE & is.na(x$nitrate[i]) == FALSE & is.na(x$sulfat[i]) == FALSE){ print("CONFIRM")}
}
f
f(1)
f(2)
f(3)
lapply(x, f, i=1:3)
lapply(x, f, 1:3)
lapply(x, f, i=1:3)
lapply(x, f, i=c(1:3)
)
f <- function(){
if(is.na(x$Date[i]) == FALSE & is.na(x$nitrate[i]) == FALSE & is.na(x$sulfat[i]) == FALSE){ print("CONFIRM")}
}
lapply(x, f, i=c(1:3)
)
list1 <- 1:10
list2 <- letters[1:26]
list3 <- 25:32
mylist <- list(list1, list2, list3)
foo<- function(x){x[c(3,5,9)]}
mylist[[1]]
mylist[1]
m <- matrix(1:6, 5, 4)
m <- matrix(1:20, 5, 4)
m
matrixDislikesEvens <- function(x){if(x % 2 == 0) 0}
matrixDislikesEvens <- function(x){if(x % 2 == 0)
0}
matrixDislikesEvens <- function(x){
if(x % 2 == 0)
0
}
matrixDislikesEvens <- function(x){
if(x % 2 == 0)
0
}
matrixDislikesEvens <- function(x){
if(x % 2 == 0)
matrixDislikesEvens <- function(x){
if(x %% 2 == 0)
0
}
mapply(m, matrixDislikesEvens)
mapply(m, matrixDislikesEvens())
mapply(m[,1], matrixDislikesEvens())
m[,1]
?mapply
mapply(matrixDislikesEvens, m)
mapply(matrixDislikesEvens, m[,1])
mapply(1:4, 4:1)
mapply(rep, 1:4, 4:1)
mapply(matrixDislikesEvens, m[,1], length(m[,1]))
mapply(matrixDislikesEvens, m[,1], length(m)
)
mapply(matrixDislikesEvens, m[,1], 1:4
)
mapply(mean, m)
?sqrt
?pow
quadraticExp <- expression(-b + (sqrt(B*B -4*a*c)/2)
)
quadraticExpP <- expression(-b + (sqrt(B*B -4*a*c)/2))
quadraticExpM <- expression(-b - (sqrt(B*B -4*a*c)/2))
b <- 10; a <- 5; c <- 2;
eval(quadraticExpP)
quadraticExpP <- expression(-b + (sqrt(b*b -4*a*c)/2))
quadraticExpM <- expression(-b - (sqrt(b*b -4*a*c)/2))
eval(quadraticExpP)
eval(quadraticExpM)
quadtratic <- function(a,b,c){
c(eval(quadraticExpP), eval(quadraticExpM))
}
quadratic <- function(a,b,c){
c(eval(quadraticExpP), eval(quadraticExpM))
}
quadratic(5,5,5)
quadratic(1,5,9)
quadratic(9,1,1)
quadratic(1,9,1)
?rpois
data.entry(m)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd("C:\\Users\\mitcolli\\Documents\\Docs\\code\\Coursera\\RProgramming\\wk4")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
source("best.r")
best("TX", " heart attack")
source("best.r")
best("TX", " heart attack")
best("TX", "heart attack")
temp
random
randomTemp
order(randomTemp, hAttack)
hAttack  <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
hFailure <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
pSick    <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
name     <- "Hospital.Name"
order(randomTemp, hAttack, name)
?order
order(data, hAttack, name)
length(data[hAttack])
length(data[,hAttack])
length(data[name])
length(data[,name])
order(data, data[,hAttack], data[,name])
data[,hAttack]
length(data[,hAttack])
length(data[,name])
order(data, data[,hAttack], data[,name])
order(data, as.numeric(data[,hAttack]), as.numeric(data[,name]))
order(as.numeric(data.rel[,3]),data.rel[,1])
order(data[,hAttack], data[,name])
order(data[hAttack], data[name])
order(data[,name])
data
indexes<- order(data[,hAttack], data[,name])
indexes[1]
data[indexes[1],name]
data[indexes[1],hAttack]
data[,1]
length(data[,1])
source("rankhospital.r")
rankhospital("TX", "heart failure", 4)
source("rankhospital.r")
rankhospital("TX", "heart failure", 4)
source("rankhospital.r")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 1)
rankhospital("TX", "heart failure", 2)
rankhospital("TX", "heart failure", 3)
rankhospital("TX", "heart failure", 4)
source("rankhospital.r")
rankhospital("TX", "heart failure", 4)
source("rankhospital.r")
rankhospital("TX", "heart failure", 4)
source("rankhospital.r")
rankhospital("TX", "heart failure", 4)
?Position
Position(data[,name], "DETAR HOSPITAL NAVARRO")
Position(find, data[,name], "DETAR HOSPITAL NAVARRO")
?index
randomReference[4]
data[randomReference[4], name]
data[randomReference[4706], name]
data[randomReference[4709], name]
data[randomReference[4708], name]
data[randomReference[4707], name]
data[randomReference[4707=6], name]
data[randomReference[4706], name]
data[randomReference[4702], name]
data[randomReference[4701], name]
?order
randomReference[1]
randomReference[2]
data[randomReference[2], name]
data[randomReference[4], name]
data[name=="DETAR HOSPITAL NAVARRO"]
data[name=="DETAR HOSPITAL NAVARRO",]
data
data[,name=="DETAR HOSPITAL NAVARRO",]
data["DETAR HOSPITAL NAVARRO",]
write.csv(data, "testThisData.csv")
data[3954,name]
randomReference
randomReference <- order(data[,outcome], data[,name])
randomReference <- order(data[,hAttack], data[,name])
randomReference[1]
randomReference[4]
randomReference <- order(data[,hAttack])
randomReference[4]
randomReference[n==3945]
randomReference
data[randomReference[4], name]
data[randomReference[5], name]
data[randomReference[3], name]
data[randomReference[2], name]
data[randomReference[1], name]
data[,name==""DETAR HOSPITAL NAVARRO"]
data[,name==DETAR HOSPITAL NAVARRO"]
data[,name == "DETAR HOSPITAL NAVARRO"]
bla <- data[,name == "DETAR HOSPITAL NAVARRO"]
bla
bla[1]
bla[1,]
bla
data$
data$Hospital.Name == "DETAR HOSPITAL NAVARRO"
rankhospital("TX", "heart attack", 4)
rankhospital("TX", "heart attack", "worst")
warnings()
rankhospital("TX", "heart attack", "best")
rankhospital("TX", "heart attack", "worst")
source("rankhospital.r")
rankhospital("TX", "heart attack", 50000000000)
source("rankhospital.r")
rankhospital("TX", "heart attack", 4)
a <- c(45,50,10,96)
perm <- order(a)
for(i in perm) print a[i]
for(i in perm) print(a[i])
source("rankhospital.r")
rankhospital("TX", "heart attack", 4000)
randomCompute
source("rankhospital.r")
rankhospital("TX", "heart attack", 4000)
?print
print(c("This is ", "a test"))
source("rankhospital.r")
rankhospital("TX", "heart attack", 4000)
randomCompute
source("rankhospital.r")
rankhospital("TX", "heart attack", 4000)
source("rankhospital.r")
rankhospital("TX", "heart attack", 4000)
source("rankhospital.r")
rankhospital("TX", "heart attack", 4000)
rankhospital("TX", "heart attack", 4700)
rankhospital("TX", "heart attack", 4706)
rankhospital("TX", "heart attack", worst)
rankhospital("TX", "heart attack", "worst")
rankhospital("TX", "heart attack", 70000)
