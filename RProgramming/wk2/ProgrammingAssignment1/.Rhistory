## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Begin my Code
directoryData <- list.files(directory, full.names = TRUE)
i <- 1
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
while(i < length(id) ){
#print(i)
#print(id[i])
#readline("Pause")
#print(read.csv(directoryData[id[i]]))
#readline("Pause")
data <- rbind(data, read.csv(directoryData[id[i]]))
#readline("Pause")
#print(data)
#readline("Pause")
i <- i + 1
}
print("reached End")
print(data)
readline("Check Data")
mean(data[pollutant], na.rm = TRUE)
}
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate", 10)
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate", 10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## mean; either "sulfate" or "nitrate".
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Return the mean of the pollutant across all monitors list
## Begin my Code
directoryData <- list.files(directory, full.names = TRUE)
i <- 1
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
while(i < length(id) ){
#print(i)
#print(id[i])
#readline("Pause")
#print(read.csv(directoryData[id[i]]))
#readline("Pause")
data <- rbind(data, read.csv(directoryData[id[i]]))
#readline("Pause")
print(data)
readline("Pause")
i <- i + 1
}
print("reached End")
print(data)
readline("Check Data")
mean(data[pollutant], na.rm = TRUE)
}
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate", 10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Begin my Code
directoryData <- list.files(directory, full.names = TRUE)
i <- 1
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
while(i < length(id) ){
print("Entered While Loop")
#print(id[i])
readline("Pause")
#print(read.csv(directoryData[id[i]]))
#readline("Pause")
data <- rbind(data, read.csv(directoryData[id[i]]))
#readline("Pause")
print(data)
readline("Pause")
i <- i + 1
}
print("reached End")
print(data)
readline("Check Data")
mean(data[pollutant], na.rm = TRUE)
}
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate", 10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Begin my Code
directoryData <- list.files(directory, full.names = TRUE)
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
print(id[i])
i <- 1
print("Entered While Loop")
while(i < length(id) ){
#print(id[i])
readline("Pause")
#print(read.csv(directoryData[id[i]]))
#readline("Pause")
data <- rbind(data, read.csv(directoryData[id[i]]))
#readline("Pause")
print(data)
readline("Pause")
i <- i + 1
}
print("reached End")
print(data)
readline("Check Data")
mean(data[pollutant], na.rm = TRUE)
}
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate", 10)
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Begin my Code
directoryData <- list.files(directory, full.names = TRUE)
i <- 1
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
while(i < length(id) ){
#print(id[i])
print("Entered While Loop")
#readline("Pause")
#print(read.csv(directoryData[id[i]]))
#readline("Pause")
data <- rbind(data, read.csv(directoryData[id[i]]))
#readline("Pause")
i <- i + 1
}
#print("reached End")
#readline("Check Data")
mean(data[pollutant], na.rm = TRUE)
}
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## the location of the CSV files
## 'directory' is a character vector of length 1 indicating
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## mean; either "sulfate" or "nitrate".
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## Begin my Code
## NOTE: Do not round the result!
i <- 1
directoryData <- list.files(directory, full.names = TRUE)
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
while(i < length(id) ){
print("Entered While Loop")
#print(id[i])
#readline("Pause")
#print(read.csv(directoryData[id[i]]))
#readline("Pause")
data <- rbind(data, read.csv(directoryData[id[i]]))
#readline("Pause")
i <- i + 1
}
#print("reached End")
#readline("Check Data")
mean(data[pollutant][,1], na.rm = TRUE)
}
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate", 1:10)
submit()
pollutantmean(paste(getwd(), "/specdata", sep=""), "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## the location of the CSV files
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Begin my Code
directoryData <- list.files(directory, full.names = TRUE)
i <- 1
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
while(i < length(id) ){
#print(id[i])
#readline("Pause")
#print(read.csv(directoryData[id[i]]))
#readline("Pause")
data <- rbind(data, read.csv(directoryData[id[i]]))
#readline("Pause")
}
i <- i + 1
print(length(id))
readline("Check")
mean(data[pollutant][,1], na.rm = TRUE)
}
pollutantmean(paste(getwd(), "/specdata", sep=""), "sulfate", 1:10)
pollutantmean(paste(getwd(), "/specdata", sep=""), "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
## Begin my Code
directoryData <- list.files(directory, full.names = TRUE)
i <- 1
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
while(i < length(id) ){
#print(id[i])
#readline("Pause")
#print(read.csv(directoryData[id[i]]))
#readline("Pause")
data <- rbind(data, read.csv(directoryData[id[i]]))
#readline("Pause")
i <- i + 1
}
print(length(id))
readline("Check")
mean(data[pollutant][,1], na.rm = TRUE)
}
pollutantmean(paste(getwd(), "/specdata", sep=""), "sulfate", 1:10)
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## the location of the CSV files
## 'directory' is a character vector of length 1 indicating
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## in the 'id' vector (ignoring NA values)
## Return the mean of the pollutant across all monitors list
## NOTE: Do not round the result!
## Begin my Code
directoryData <- list.files(directory, full.names = TRUE)
i <- 1
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
while(i < length(id)+1 ){
#print(id[i])
#readline("Pause")
#print(read.csv(directoryData[id[i]]))
#readline("Pause")
data <- rbind(data, read.csv(directoryData[id[i]]))
#readline("Pause")
i <- i + 1
}
print(length(id))
readline("Check")
mean(data[pollutant][,1], na.rm = TRUE)
}
pollutantmean(paste(getwd(), "/specdata", sep=""), "nitrate", 70:72)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?lapply
?tapply
directoryData
collectData
length(collectFiles)
length(collectFiles[1])
data <- read.csv(collectFiles[1])
getwd()
data <- read.csv(target, collectFiles[1])
data <- read.csv(paste(target, csvdump, sep="/")
)
data <- read.csv(paste(target, csvdump, sep="//"))
setwd(target)
data <- read.csv(csvdump[1])
data
length(data)
length(data$Date)
ls
collectFiles <- list.files(target, full.names = TRUE)
collectFiles[1]
length(read.csv(collectFiles[1])
)
length(read.csv(collectFiles[1]$Date))
length(read.csv(collectFiles[1]["Date"]))
submit()
ls
getwd()
set("d:/code/Coursera/RProgramming/wk2/ProgrammingAssignment1")
setwd("d:/code/Coursera/RProgramming/wk2/ProgrammingAssignment1")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
#Begin My Code
directoryData <- list.files(directory, full.names = TRUE)
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
finalData <- data.frame(row.names = c("id", "nobs"))
parseData <- function(funcData){
countInternal <- 0
for(item in funcData){
if(is.na(item["Date"][1]) == FALSE & is.na(item["sulfate"][1]) == FALSE & is.na(item["nitrate"][1]) == FALSE)
print("Inside Count")
}
countInternal <- countInternal + 1
countInternal
}
print("Beginning for loop")
for(i in id){
print(i)
data <- rbind(data, read.csv(directoryData[i]))
count <- parseData(data)
finalData <- rbind(finalData, data.frame(id=i, nobs=count))
# Reset data to nothing again!
data <- data.frame(row.names = c("Date", "sulfate", "nitrate"))
}
finalData
}
source("complete.R)"
source("complete.R")
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
getwd()
data <- paste(getwd(), "/specdata/", csvdump[1], sep="")
data
target <- data
target
data <- read.csv(target)
data
data[1,1]
data[1][1]
data[1,][,1]
data[1,]
frame <- data[1,]
frame
frame["Date"]
data[,1]
length(data)
length(data[,1])
data
for(i in length(data[,1])){}
for(i in length(data[,1])){print(i)}
for(i in data[,1]){print(i)}
for(i in data[1,]){print(i)}
for(i in data){print(i)}
length(data[,1])
data[,1]
data[1,]
data[2,]
data[1,]
data[1,]
la<- data[1,]
la
la["Date"]
is.na(la["Date"])
is.na(la["Date"]) == TRUE
is.na(la["Date"]) == FALSE
if(is.na(la["Date"]) == FALSE & is.na(la["sulfate"]) == FALSE & is.na(la["nitrate"]) == FALSE){print("gotcha bitch")}
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
getwd()
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
warnings()
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
submit()
6
submit()
submit()
submit()
?cor
cor(1:10, 2:11)
tmp  <-  lapply(list.files('specdata',full.names = T),read.csv)
tmp
head(temp)
head(tmp)
result <- complete("specdata"
)
result <- complete("specdata", 30)
result
result <- complete("specdata", 1:30)
result
if(results[,1][2] > 0){print("CONFIRM")}
if(results[,1] > 0){print("CONFIRM")}
if(results > 0){print("CONFIRM")}
if(results$nobs > 0){print("CONFIRM")}
if(results["nobs"][,1] > 0){print("CONFIRM")}
if(results["nobs"] > 0){print("CONFIRM")}
results["nobs"]
result["nobs"]
if(result["nobs"][,1] > 0){print("CONFIRM")}
if(result["nobs"] > 0){print("CONFIRM")}
result
result["nobs"]
result["nobs"][1]
result["nobs"][,1]
result["nobs"][,1][1]
result["nobs"][,1][2]
target
read.csv(target)
collectData
cor(collectData["sulfate"], collectData["nitrate"])
cor(collectData["sulfate"], collectData["nitrate"], use= complete.obs)
cor(collectData["sulfate"], collectData["nitrate"], use="complete.obs")
lulz <- data.frame()
lulz
lulz <- cor(collectData["sulfate"], collectData["nitrate"], use="complete.obs")
lulz
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
getwd()
source("corr.R")
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
