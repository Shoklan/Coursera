round(pnorm(70, mean = 80, sd=10))
?pnorm
round(pnorm(70, mean = 80, sd=10. lower.tail = T))
round(pnorm(70, mean = 80, sd=10, lower.tail = T))
round(qnorm(95, mean = 1100, sd = 75))
round(qnorm(.95, mean = 1100, sd = 75))
150/10
?ppois()
ppoios(10, 5, lower.tail = T)
ppois(10, 5, lower.tail = T)
ppois(5, 10, lower.tail = T)
75*75
75*75 / 10
answer <- sum(.25, .6, .15)
answer
if (answer == 1)
if (answer == 1) print(TRUE)
answer <- sum(.25, .6, .2)
if (answer == 1) print(TRUE)
library(nlme)
library(lattice)
xyplot(weight~Time| Deit, BodyWeight)
xyplot(weight~Time| Diet, BodyWeight)
?text
?axis
?llines
?par
?trellis.par.set()
library(datasets)
data("airquality")
class(airquality$Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
movies
g <- ggplot(movies, aes(votes, rating))
print(g)
pnorm(93, mean = 100, sd = 10)
-7/10
1/2^2
1/3^2
1/4^2
k <- c(1,2,3,4)
chebyTheorum <- (1 - 1/k^2)
print(chebyTheorum)
.88 * .05 / (.88 * .05 + .12* .95)
1 - .88
qnorm(.05, mean = 100, sd = 10, lower.tail = F)
?pnorm
pbinom(4, prob = .5, size =6, lower.tail = F)
?qbinom
pnorm(.7, mean = 80, sd = 10)
pnorm(70, mean = 80, sd = 10)
qnorm(.95, mean = 1100, sd = 75)
qnorm(95, mean = 1100, sd = 75)
qnorm(.95, mean = 1100, sd = 75)
qnorm(.95, mean = 1100, sd = 75^2/sqrt(100))
qnorm(.95, mean = 1100, sd = 75/sqrt(100))
pbinom(5, 4, lower.tail = F)
pbinom(5, 4, .5, lower.tail = F)
pbinom(5, size=4, prob=.5, lower.tail=F)
pbinom(4, size=5, prob=.5, lower.tail=F)
sqrt(1/12)
(1/12)/ sqrt(1000)
ppois(10, 5 * 3)
6/8
.5^4
.5^5
round(pbinom(4, prob=.5, size = 5, lower.tail = F))
round(pbinom(3, prob=.5, size = 5, lower.tail = F))
round(pbinom(3, prob=.5, size = 5, lower.tail = F))
pbinom(3, prob=.5, size = 5, lower.tail = F)
?var
10/sqrt(100)
1 - 1/2^2
7/8
7/8 + 5/6
(7/8 + 5/6)/2
getwd()
NEI <- readRDS("summarySCC_PM25.rds")
setwd("D:\\Code\\Coursera\\DataAnalysis\\Project 2")
NEI <- readRDS("summarySCC_PM25.rds")
filter(NEI, year=1999)
temp <- filter(NEI, year==1999)
years <- levels(as.factor(NEI$year))
years
for(yr in years){
df <- rbind(df,filter(NEI, year ==yr))
}
head(df)
years <- levels(as.factor(NEI$year))
collectSubstring <- function(data, years, index=1){
for(yr in years){
print(c("Year: ", year))
subStringCollection[index] <- filter(data, year == yr)
index <- index+1
}
subStringCollection
}
collectEmissions <- function(collection, index=1:length(years)){
for(i in index){
data[i] <- sum(collection$Emissions)
}
data
}
subStrings    <- collectSubstring(NEI, years)
collectSubstring <- function(data, years, index=1){
for(yr in years){
print(c("Year: ", yr))
subStringCollection[index] <- filter(data, year == yr)
index <- index+1
}
subStringCollection
}
subStrings    <- collectSubstring(NEI, years)
for(yr in years){print(yr)}
subStringCollection[1] <- filter(data, year == years[1])
subStringCollection[1] <- filter(NEI, year == years[1])
length(subStringCollection)
df <- filter(NEI, year == "1999")
colnames(NEI)
df <- filter(NEI, "year" == "1999")
collectSubstring <- function(data, years, index=1){
for(yr in years){
print(c("Year: ", yr))
subStringCollection[index] <- filter(data, "year" == yr)
index <- index+1
}
subStringCollection
}
years <- levels(as.factor(NEI$year))
subStrings    <- collectSubstring(NEI, years)
collectSubstring <- function(data, years, index=1){
for(yr in years){
print(c("Year: ", yr))
subStringCollection[index] <- filter(data, "year" == yr)
index <- index+1
}
subStringCollection
}
subStrings    <- collectSubstring(NEI, years)
collectSubstring <- function(data, years, index=1){
subStringCollection <- vector()
for(yr in years){
print(c("Year: ", yr))
subStringCollection[index] <- filter(data, "year" == yr)
index <- index+1
}
subStringCollection
}
subStrings    <- collectSubstring(NEI, years)
collectEmissions <- function(collection, index=1:length(years)){
for(i in index){
data[i] <- sum(collection$Emissions)
index <- index +1
}
sum(data  )
}
sumCollection <- collectEmissions(subStrings)
temp <- df(hue = 15, la = 97)
temp <- df("hue" = 15, "la" = 97)
?data.frame
df <- (15, 15)
df <- (x=1, y=1:10)
temp <- data.frame("hue" = 15, "la" = 97)
temp
tempVec <- vector(temp)
tempVec <- vector(temp, mode="data.frame")
tempVec <- vector(temp, mode="data.frame". length = 1)
tempVec <- vector(temp, mode="data.frame", length = 1)
tempVec <- vector()
tempVec[1] <- temp
tempVec
temp
head(sumCollection)
collectEmissions <- function(collection, index=1:length(years)){
for(i in index){
data[i] <- sum(collection[index]["year"])
index <- index +1
}
sum(data)
}
sumCollection <- collectEmissions(subStrings)
sum(5, 7)
collectSubstring <- function(data, years){
culumSum <- 0
temp <- filter(data, "year" == yr)
for(yr in years){
culumSum <- sum(culumSum, temp$Emissions)
}
culumSum
}
collectSubstring <- function(data, years, index=1){
culumSum <- 0
for(yr in years){
temp <- filter(data, "year" == yr)
culumSum[index] <- sum(culumSum, temp$Emissions)
}
culumSum
}
years <- levels(as.factor(NEI$year))
subStrings    <- collectSubstring(NEI, years)
df <- filter(data, "year" == yr)
ff <- filter(data, "year" == yr)
ff <- filter(data, "year" == "1999")
df<- filter(NEI, "year" == "1999")
culumsum[1] <- df
culumsum <- 0
culumsum <- df
culumsum
culumsum[1["year"]]
culumsum[1]
culumsum[2]
culumsum <- 0
temp <- filter(NEI, "year" == "1999")
head(temp)
temp
temp$year
temp[1]
temp[2]
temp[3]
temp$
year
temp[,"1999"]
colnames(kNEI)
colnames(NEI)
head(NEI$year)
filterCatch <- slice(NEI, 1:10)
library(dplyr)
?filter
char(filer)
filter
slice
filterCatch <- slice(NEI, 1:10)
subStrings    <- collectSubstring(NEI, years)
df <- filter(NEI, "year" == "1999")
df
df <- filter(NEI, year == "1999")
colnames(df)
collectSubstring <- function(data, years, index=1){
culumSum <- 0
for(yr in years){
temp <- filter(data, year == yr)
culumSum <- sum(culumSum, temp$Emissions)
}
culumSum
}
subStrings    <- collectSubstring(NEI, years)
collectSubstring <- function(data, years, index=1){
culumSum <- 0
for(yr in years){
temp <- filter(data, year == yr)
culumSum[index] <- sum(culumSum, temp$Emissions)
index <- index +1
}
culumSum
}
collectSubstring <- function(data, years, index=1){
culumSum <- 0
for(yr in years){
temp <- filter(data, year == yr)
culumSum[index] <- sum(temp$Emissions)
index <- index +1
}
culumSum
}
subStrings    <- collectSubstring(NEI, years)
plot(years,  sumCollection)
plot(years,  subStrings)
hist(years,  subStrings)
hist(as.numeric(years),  subStrings)
as.numeric(years)
yearNumeric <- as.numeric(years)
hist(yearNumeric,  subStrings)
hist(years, sums)
plot(years, sums)
sums <- collectSubstring(NEI, years)
plot(years, sums)
library(dplyr)
?filter
filter
years <- levels(as.factor(NEI$year))
sums <- collectSubstring(NEI, years)
plot(years,  sums)
collectSums <- function(data, years, cityFIPS="24510", index=1){
culumSum <- 0
for(yr in years){
temp <- filter(data, year == yr, fips == cityFIPS)
culumSum[index] <- sum(temp$Emissions)
index <- index +1
}
culumSum
}
sums <- collectSums(NEI, years)
collectSums <- function(data, years, index=1){
culumSum <- 0
for(yr in years){
temp <- filter(data, year == yr)
culumSum[index] <- sum(temp$Emissions)
index <- index +1
}
culumSum
}
sums <- collectSums(NEI, years)
plot(years, sums)
collectSums <- function(data, years, cityFIPS="24510", index=1){
culumSum <- 0
for(yr in years){
temp <- filter(data, year == yr, fips == cityFIPS)
culumSum[index] <- sum(temp$Emissions)
index <- index +1
culumSum
}
}
sums <- collectSums(NEI, years)
temp <- filter(NEI, year == yr, fips == "24510")
temp$Emissions
sum(temp$Emissions)
collectSums <- function(data, years, cityFIPS="24510", index=1){
culumSum <- 0
for(yr in years){
temp <- filter(data, year == yr, fips == cityFIPS)
culumSum[index] <- sum(temp$Emissions)
index <- index +1
}
culumSum
}
sums <- collectSums(NEI, years)
plot(years,  sums)
library(ggplot2)
aes?
?aes
plot(years,  sums)
years <- levels(as.factor(NEI$year))
library(ggplot2)
collectYears <- collectYears(NEI, years)
collectYears <- function(data, years, cityFIPS="24510", index=1){
for(yr in years){
culumSum <- 0
culumYear[index] <- filter(data, year == yr, fips == cityFIPS)
index <- index +1
}
culumYear
}
collectYears <- collectYears(NEI, years)
collectYears <- function(data, years, cityFIPS="24510", index=1){
for(yr in years){
culumYear <- data.frame()
culumYear[index] <- filter(data, year == yr, fips == cityFIPS)
culumYear
index <- index +1
}
}
collectYears <- collectYears(NEI, years)
data(mpg)
mpg
colnames(mpg)
temp <-colnames(mpg)
temp
df <- data.frame <- colnames(temp)
df
df <- data.frame() <- colnames(temp)
colnames(temp)
temp <-colnames(mpg)
temp
df <- data.frame() <- colnames(temp)
df
df <- data.frame()
colnames(df) <- temp
class(df)
df <- read.table(text = "", col.names = temp)
df
class(df)
collectYears <- function(data, years, cityFIPS="24510", index=1){
col.names <- colnames(NEI)
col.names <- colnames(NEI)
collectYears <- function(data, years, cityFIPS="24510", index=1){
# This will create an empty dataframe!
df <- read.table(text = "", col.names = temp)
for(yr in years){
df <- filter(data, year == yr, fips == cityFIPS)
culumFrames[index] <- df
index <- index +1
}
culumYear
}
culumFrames <- vector()
collectYears <- function(data, years, cityFIPS="24510", index=1){
# This will create an empty dataframe!
culumFrames <- vector()
df <- read.table(text = "", col.names = temp)
for(yr in years){
df <- filter(data, year == yr, fips == cityFIPS)
culumFrames[index] <- df
index <- index +1
}
culumYear
}
collectYears <- collectYears(NEI, years)
collectYears <- function(data, years, cityFIPS="24510", index=1){
# This will create an empty dataframe!
culumFrames <- vector()
df <- read.table(text = "", col.names = temp)
for(yr in years){
df <- filter(data, year == yr, fips == cityFIPS)
culumFrames[index] <- df
index <- index +1
}
culumFrames
}
collectYears <- collectYears(NEI, years)
length(collectYears)
item<- collectYears[1]
item
collectYears <- function(data, years, cityFIPS="24510", index=1){
# This will create an empty dataframe!
culumFrames <- read.table(text = "", col.names = temp)
for(yr in years){
culumFrames <- rbind(df, filter(data, year == yr, fips == cityFIPS))
}
culumFrames
}
collectYears <- collectYears(NEI, years)
class(collectYears)
collectYears$year
years <- levels(as.factor(NEI$year))
levels(collectYears)
collectYears
collectYears <- function(data, years, cityFIPS="24510", index=1){
# This will create an empty dataframe!
culumFrames <- read.table(text = "", col.names = temp)
for(yr in years){
culumFrames <- rbind(culumFrames, filter(data, year == yr, fips == cityFIPS))
culumFrames
}
}
collectYears <- collectYears(NEI, years)
collectYears$year
collectYears <- function(data, years, cityFIPS="24510", index=1){
# This will create an empty dataframe!
culumFrames <- read.table(text = "", col.names = temp)
for(yr in years){
culumFrames <- rbind(culumFrames, filter(data, year == yr, fips == cityFIPS))
}
culumFrames
}
years <- levels(as.factor(NEI$year))
col.names <- colnames(NEI)
collectYears <- collectYears(NEI, years)
collectYears$year
qplot(years, Emissions,facet = .~type, data = collectYears)
qplot(years, Emissions, facets = .~type, data = collectYears)
qplot(years, Emissions, data = collectYears, facets = .~type)
qplot(years, Emissions, data = collectYears, facets = . ~ type)
qplot(year, Emissions, data = collectYears, facets = . ~ type)
qplot(year, Emissions, data = collectYears, facets = . ~ type)
qplot(year, Emissions, data = collectYears, facets = type ~ .)
qplot(year, Emissions, data = collectYears, facets = type ~ ., geom_smooth())
qplot(year, Emissions, data = collectYears, facets = type ~ ., geom = "smooth")
qplot(year, Emissions, data = collectYears, facets = type ~ ., geom = "density")
qplot(year, Emissions, data = collectYears, facets = type ~ ., geom = "density")
qplot(year, Emissions, data = collectYears, facets = type ~ ., geom = c("point", "smooth"))
qplot(year, Emissions, data = collectYears, facets = type ~ ., geom = c("point", "loess"))
qplot(year, Emissions, data = collectYears, facets = type ~ ., method = "lm")
qplot(year, Emissions, data = collectYears, facets = type ~ ., geom = "smooth")
qplot(year, Emissions, data = collectYears, facets = type ~ ., geom = "smooth", method = "lm")
